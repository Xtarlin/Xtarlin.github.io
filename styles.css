document.addEventListener('DOMContentLoaded', () => {
    // Element references
    const form = document.getElementById('visaApplicationForm');
    const usaFormSections = document.getElementById('usaFormSections');
    const canadaFormSections = document.getElementById('canadaFormSections');
    const visaTypeRadios = document.querySelectorAll('input[name="visaType"]');
    const countrySelectionError = document.getElementById('countrySelectionError');
    const saveProgressBtn = document.getElementById('saveProgressBtn');
    const reviewAndSubmitBtn = document.getElementById('reviewAndSubmitBtn');
    const progressBarFill = document.querySelector('.progress-bar-fill');
    const progressBarText = document.getElementById('progressBarText');
    const customModal = document.getElementById('customModal');
    const modalTitle = document.getElementById('modalTitle');
    const modalMessage = document.getElementById('modalMessage');
    const modalCloseBtn = document.getElementById('modalCloseBtn');
    const summaryModal = document.getElementById('summaryModal');
    const summaryContent = document.getElementById('summaryContent');
    const summaryCloseButton = document.getElementById('summaryCloseButton');
    const editFormBtn = document.getElementById('editFormBtn');
    const confirmAndDownloadBtn = document.getElementById('confirmAndDownloadBtn');

    // === Accesibilidad: cerrar modales con Esc y por tabulación ===
    [customModal, summaryModal].forEach(modal => {
        modal.addEventListener('keydown', e => {
            if (e.key === 'Escape') hideModal(modal);
        });
    });

    // Mostrar/ocultar secciones según país
    visaTypeRadios.forEach(radio => {
        radio.addEventListener('change', () => {
            showCountrySection(radio.value);
            countrySelectionError.style.display = 'none';
            updateProgress();
        });
    });

    function showCountrySection(country) {
        if (country === 'USA') {
            usaFormSections.hidden = false;
            canadaFormSections.hidden = true;
        } else if (country === 'Canada') {
            usaFormSections.hidden = true;
            canadaFormSections.hidden = false;
        }
        updateProgress();
    }

    // Validación simple y progresiva
    form.addEventListener('input', updateProgress);

    function updateProgress() {
        let totalFields = 0, completedFields = 0;
        // Campos de país
        if ([...visaTypeRadios].some(r => r.checked)) completedFields++;
        totalFields++;
        // Campos visibles
        const visibleFields = form.querySelectorAll('section:not([hidden]) input[required]');
        visibleFields.forEach(input => {
            totalFields++;
            if (input.value.trim() !== '') completedFields++;
        });
        const percent = Math.round((completedFields / totalFields) * 100);
        progressBarFill.style.width = percent + '%';
        progressBarFill.setAttribute('aria-valuenow', percent);
        progressBarText.textContent = percent + "% Completo";
    }

    // Guardar progreso en localStorage
    saveProgressBtn.addEventListener('click', () => {
        const data = new FormData(form);
        const obj = {};
        data.forEach((v, k) => obj[k] = v);
        localStorage.setItem('visaFormProgress', JSON.stringify(obj));
        showModal('¡Progreso guardado!', 'Sus datos se han guardado en este dispositivo.');
    });

    // Recuperar progreso al cargar
    (function restoreProgress() {
        const saved = localStorage.getItem('visaFormProgress');
        if (saved) {
            const obj = JSON.parse(saved);
            Object.keys(obj).forEach(key => {
                const el = form.elements[key];
                if (el) {
                    if (el.type === 'radio' || el.type === 'checkbox') {
                        el.checked = el.value === obj[key];
                    } else {
                        el.value = obj[key];
                    }
                }
            });
            if (obj['visaType']) showCountrySection(obj['visaType']);
        }
        updateProgress();
    })();

    // Revisar y mostrar resumen antes de enviar
    reviewAndSubmitBtn.addEventListener('click', () => {
        if (![...visaTypeRadios].some(r => r.checked)) {
            countrySelectionError.style.display = '';
            visaTypeRadios[0].focus();
            return;
        }
        // Validar campos visibles
        let valid = true;
        const visibleFields = form.querySelectorAll('section:not([hidden]) input[required]');
        visibleFields.forEach(input => {
            const errorDiv = input.nextElementSibling;
            if (!input.value.trim()) {
                errorDiv.textContent = "Este campo es obligatorio";
                valid = false;
            } else {
                errorDiv.textContent = "";
            }
        });
        if (!valid) return;
        showSummary();
    });

    function showSummary() {
        // Generar resumen dinámico
        const data = new FormData(form);
        let html = '<ul>';
        data.forEach((v, k) => {
            if (k && v) html += `<li><strong>${k}:</strong> ${escapeHTML(v)}</li>`;
        });
        html += '</ul>';
        summaryContent.innerHTML = html;
        showModal(summaryModal);
    }

    // Confirmar y descargar resumen
    confirmAndDownloadBtn.addEventListener('click', () => {
        const data = new FormData(form);
        let txt = '';
        data.forEach((v, k) => { txt += `${k}: ${v}\n`; });
        const blob = new Blob([txt], {type: "text/plain"});
        const a = document.createElement("a");
        a.href = URL.createObjectURL(blob);
        a.download = "resumen_solicitud_visa.txt";
        document.body.appendChild(a);
        a.click();
        a.remove();
        showModal('¡Descargado!', 'Se ha descargado el resumen de su solicitud.');
    });

    // Cerrar modales
    [modalCloseBtn, summaryCloseButton].forEach(btn => {
        btn.addEventListener('click', () => {
            hideModal(btn.closest('.modal'));
        });
        btn.addEventListener('keydown', e => {
            if (e.key === 'Enter' || e.key === ' ') {
                hideModal(btn.closest('.modal'));
            }
        });
    });
    editFormBtn.addEventListener('click', () => {
        hideModal(summaryModal);
    });

    // Modal helpers
    function showModal(modalOrTitle, msg) {
        if (typeof modalOrTitle === 'string') {
            modalTitle.textContent = modalOrTitle;
            modalMessage.textContent = msg || '';
            customModal.classList.add('show');
            customModal.setAttribute('aria-hidden', 'false');
            customModal.focus();
        } else {
            modalOrTitle.classList.add('show');
            modalOrTitle.setAttribute('aria-hidden', 'false');
            modalOrTitle.focus();
        }
    }
    function hideModal(modalElement) {
        modalElement.classList.remove('show');
        modalElement.setAttribute('aria-hidden', 'true');
    }
    function escapeHTML(str) {
        return str.replace(/[&<>"']/g, c =>
            ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c])
        );
    }

    // Mejor accesibilidad: enfocar modal al abrir
    function focusFirstButtonInModal(modal) {
        const btn = modal.querySelector('button, [tabindex]');
        if (btn) btn.focus();
    }
});
